---
# tasks file for update-centos-redhat.yml
- name: SISOP | Add Motd
  template: src=motd.sh dest=/etc/motd.sh force=yes owner=root group=root mode=0755

- name: SISOP | Change /etc/profile
  lineinfile: dest=/etc/profile line={{ item }}
  with_items:
    - '#--- Default export & Alias ---#'
    - 'export HISTTIMEFORMAT="%d/%m/%Y - %H:%M:%S - "'
    - 'export HISTSIZE="5000"'
    - 'export HISTFILESIZE="5000"'
    - 'export TERM=linux'
    - 'alias ls="ls -lh --color"'
    - 'alias grep="grep --color"'
    - 'alias vi="vim"'
    - 'alias rm="rm -i"'
    - '/etc/motd.sh'

- name: SISOP | Disable SELINUX (Temp)
  selinux: state=disabled
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: SISOP | Disable SELINUX (Permanet)
  replace:
      dest=/etc/selinux/config
      regexp='SELINUX=enforcing'
      replace='SELINUX=disabled'
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: YUM | Install epel-repository
  yum: name=epel-release state=latest
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
  
- name: YUM | Install dnf-plugins-core
  yum: name=dnf-plugins-core state=latest
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: SISOP | Enable PowerTool Repository
  replace:
      dest=/etc/yum.repos.d/CentOS-Linux-PowerTools.repo
      regexp='enabled=0'
      replace='enabled=1'
  when: ansible_distribution_major_version == "8"

- name: YUM | Update System
  yum: name=* state=latest update_cache=yes
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: YUM | Install common packages
  yum: name={{ common_packages_redhat }} state=latest
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: YUM | Remove packages
  yum:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
      - firewalld
      - postfix  
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: Unconditionally reboot the machine with all defaults
  reboot:

#- name: Reboot machine using a custom reboot command
#  reboot:
#    reboot_command: launchctl reboot userspace
#    boot_time_command: uptime | cut -d '1' -f 5



